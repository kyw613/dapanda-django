# Generated by Django 5.0.6 on 2024-06-15 16:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone_num', models.CharField(max_length=12)),
                ('address', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('mem_status', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'member',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('register_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('term_price', models.PositiveIntegerField()),
                ('start_price', models.PositiveIntegerField()),
                ('highest_price', models.PositiveIntegerField(default=0)),
                ('immediate_purchase_price', models.PositiveIntegerField(blank=True, null=True)),
                ('immediate_purchase_status', models.PositiveSmallIntegerField()),
                ('num_bid', models.PositiveIntegerField(default=0)),
                ('auction_status', models.PositiveSmallIntegerField()),
                ('product_info', models.CharField(max_length=1023)),
                ('file_count', models.PositiveIntegerField(default=0)),
                ('bid_member', models.ForeignKey(db_column='bid_member_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bid_products', to='search.member')),
                ('register_member', models.ForeignKey(db_column='register_member_id', on_delete=django.db.models.deletion.CASCADE, related_name='registered_products', to='search.member')),
            ],
            options={
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Chatroom',
            fields=[
                ('chatroom_id', models.AutoField(primary_key=True, serialize=False)),
                ('member', models.ForeignKey(db_column='member_id', on_delete=django.db.models.deletion.CASCADE, to='search.member')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='search.product')),
            ],
            options={
                'db_table': 'chatroom',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_price', models.PositiveIntegerField()),
                ('bid_date', models.DateTimeField()),
                ('bid_member', models.ForeignKey(db_column='bid_member_id', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='search.member')),
                ('bid_product', models.ForeignKey(db_column='bid_product_id', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='search.product')),
            ],
            options={
                'db_table': 'bid',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductHistory',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('register_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('last_bid_date', models.DateTimeField(blank=True, null=True)),
                ('term_price', models.PositiveIntegerField()),
                ('start_price', models.PositiveIntegerField()),
                ('end_price', models.PositiveIntegerField(blank=True, null=True)),
                ('immediate_purchase_price', models.PositiveIntegerField()),
                ('immediate_purchase_status', models.PositiveSmallIntegerField()),
                ('num_bid', models.PositiveIntegerField(default=0)),
                ('auction_status', models.PositiveSmallIntegerField()),
                ('file_count', models.PositiveSmallIntegerField(default=0)),
                ('product_info', models.TextField(max_length=1023)),
                ('award_member', models.ForeignKey(blank=True, db_column='award_member_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_awarded_products', to='search.member')),
                ('register_member', models.ForeignKey(db_column='register_member_id', on_delete=django.db.models.deletion.CASCADE, related_name='history_registered_products', to='search.member')),
            ],
            options={
                'db_table': 'product_history',
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(db_column='member_id', on_delete=django.db.models.deletion.CASCADE, to='search.member')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='search.product')),
            ],
            options={
                'db_table': 'wish_list',
                'managed': True,
            },
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('register_date__lte', models.F('start_date'))), name='check_register_before_start'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('end_date'))), name='check_start_before_end'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('start_price__lt', models.F('highest_price'))), name='check_start_less_than_highest'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('highest_price__lt', models.F('immediate_purchase_price'))), name='check_highest_less_than_immediate'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('register_member', models.F('bid_member')), _negated=True), name='check_different_member'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('member', 'product')},
        ),
    ]
